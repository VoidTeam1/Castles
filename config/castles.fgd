// 
// Castles.Game : Sandbox.Game 
// 
@PointClass = castles : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
]

// 
// Castles.Weapons.Pistol : Castles.Weapons.Base.ProjectileWeapon 
// 
@PointClass = castles_pistol : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
]

// 
// Castles.Weapons.Shotgun : Castles.Weapons.Base.ProjectileWeapon 
// 
@PointClass = castles_shotgun : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
]

// 
// Castles.Weapons.SMG : Castles.Weapons.Base.ProjectileWeapon 
// 
@PointClass = castles_smg : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
]

// 
// Castles.Weapons.Base.Projectile : Sandbox.ModelEntity 
// 
@PointClass = projectile : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
]

// 
// Castles.MapEntities.JumpPlatform : Sandbox.FuncBrush 
// 
@SolidClass = jump_platform : "A jump platform that extends itself vertically."
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	start_height(integer) : "start_height" :  : ""
	activated_height(integer) : "activated_height" :  : ""
	activated_by(string) : "activated_by" :  : ""
	activate_speed(float) : "activate_speed" :  : ""
	enabled(boolean) : "Enabled" :  : "Whether this func_brush is visible/active at all"
	solid(boolean) : "Solid" :  : "Whether this func_brush has collisions"

	input DisableSolid(void) : "Make this func_brush non solid"
	input EnableSolid(void) : "Make this func_brush solid"
	input ToggleSolid(void) : "Toggle solidity of this func_brush"
	input Enable(void) : "Enable this func_brush, making it visible"
	input Disable(void) : "Disable this func_brush, making it invisible and non solid"
	input Toggle(void) : "Toggle this func_brush"
]

// 
// Castles.MapEntities.PaymentEntity : Sandbox.ModelEntity 
// 
@PointClass = castles_payment : "Payment for castles upgrades."
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	payment_type(string) : "Payment Type" :  : ""
	max_level(integer) : "Max Level" :  : ""

]

// 
// Castles.Entities.GoldEntity : Sandbox.ModelEntity 
// 
@PointClass = gold : ""
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
]

